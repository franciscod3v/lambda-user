{
  "service": {
    "service": "user-service",
    "serviceObject": {
      "name": "user-service"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "DYNAMO_TABLE": "user_management",
        "SQS_QUEUE_NAME": "queue_users",
        "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:UpdateItem",
                "sqs:SendMessage",
                "sqs:GetQueueUrl",
                "sns:Publish"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-1:*:table/user_management",
                "arn:aws:sqs:us-east-1:648078772415:queue_users",
                "arn:aws:sns:us-east-1:648078772415:sns_users"
              ]
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-service-dev-createUser"
            }
          },
          "GetUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-service-dev-getUser"
            }
          },
          "DeleteUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-service-dev-deleteUser"
            }
          },
          "UpdateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-service-dev-updateUser"
            }
          },
          "SendMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-service-dev-sendMessage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "user-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/user-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/user-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          "arn:aws:sqs:us-east-1:648078772415:queue_users"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "user-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
                "S3Key": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z/user-java-1.0-SNAPSHOT.jar"
              },
              "Handler": "com.pragma.app.createuser.CreateUserHandler",
              "Runtime": "java21",
              "FunctionName": "user-service-dev-createUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMO_TABLE": "user_management",
                  "SQS_QUEUE_NAME": "queue_users",
                  "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUserLogGroup"
            ]
          },
          "GetUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
                "S3Key": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z/user-java-1.0-SNAPSHOT.jar"
              },
              "Handler": "com.pragma.app.getuser.GetUserHandler",
              "Runtime": "java21",
              "FunctionName": "user-service-dev-getUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMO_TABLE": "user_management",
                  "SQS_QUEUE_NAME": "queue_users",
                  "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUserLogGroup"
            ]
          },
          "DeleteUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
                "S3Key": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z/deleteUser.zip"
              },
              "Handler": "user-node/deleteUserHandler.deleteUserHandler",
              "Runtime": "nodejs20.x",
              "FunctionName": "user-service-dev-deleteUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMO_TABLE": "user_management",
                  "SQS_QUEUE_NAME": "queue_users",
                  "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUserLogGroup"
            ]
          },
          "UpdateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
                "S3Key": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z/updateUser.zip"
              },
              "Handler": "user-node/updateUserHandler.updateUserHandler",
              "Runtime": "nodejs20.x",
              "FunctionName": "user-service-dev-updateUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMO_TABLE": "user_management",
                  "SQS_QUEUE_NAME": "queue_users",
                  "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUserLogGroup"
            ]
          },
          "SendMessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
                "S3Key": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z/sendMessage.zip"
              },
              "Handler": "user-node/sendMessageHandler.sendMessageHandler",
              "Runtime": "nodejs20.x",
              "FunctionName": "user-service-dev-sendMessage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMO_TABLE": "user_management",
                  "SQS_QUEUE_NAME": "queue_users",
                  "SNS_TOPIC_ARN": "arn:aws:sns:us-east-1:648078772415:sns_users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SendMessageLogGroup"
            ]
          },
          "DeleteUserLambdaVersionHuaIv8KbIjQHN6CiTJ7mZpPoEETaLueEJJcUkJcSU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUserLambdaFunction"
              },
              "CodeSha256": "UXSxiWC8E+i3a1QNyKuyFkmV04pBBbplaCqSFuuRVqg="
            }
          },
          "SendMessageLambdaVersionhGxnWNY9pAUHB5E9cT4OfG1Sag5J6qx2Xow3X5Nk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendMessageLambdaFunction"
              },
              "CodeSha256": "UXSxiWC8E+i3a1QNyKuyFkmV04pBBbplaCqSFuuRVqg="
            }
          },
          "UpdateUserLambdaVersionqz9BR9yeriyUXXycKS8O4AJdxLVBo6Q1kZuKSvdzAY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUserLambdaFunction"
              },
              "CodeSha256": "UXSxiWC8E+i3a1QNyKuyFkmV04pBBbplaCqSFuuRVqg="
            }
          },
          "CreateUserLambdaVersionDAEF0i06wNUQEUscUKVXfCj1YAPKJhsGKyiwlExxQY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUserLambdaFunction"
              },
              "CodeSha256": "/ASLoT/MfbzLZgiCGa7qVFTz9XX9dMggCUfCg24oUd8="
            }
          },
          "GetUserLambdaVersionGxyiEIV6rS2N3tGvBvVaEQqbgPCyyI7zxSERTwCL2A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserLambdaFunction"
              },
              "CodeSha256": "/ASLoT/MfbzLZgiCGa7qVFTz9XX9dMggCUfCg24oUd8="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-user-service",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1749808984506": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUsersPost",
              "ApiGatewayMethodUsersIdVarGet",
              "ApiGatewayMethodUsersIdVarDelete",
              "ApiGatewayMethodUsersIdVarPut"
            ]
          },
          "CreateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SendMessageEventSourceMappingSQSQueueusers": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:sqs:us-east-1:648078772415:queue_users",
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendMessageLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
            "Export": {
              "Name": "sls-user-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "DeleteUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUserLambdaVersionHuaIv8KbIjQHN6CiTJ7mZpPoEETaLueEJJcUkJcSU"
            },
            "Export": {
              "Name": "sls-user-service-dev-DeleteUserLambdaFunctionQualifiedArn"
            }
          },
          "SendMessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendMessageLambdaVersionhGxnWNY9pAUHB5E9cT4OfG1Sag5J6qx2Xow3X5Nk"
            },
            "Export": {
              "Name": "sls-user-service-dev-SendMessageLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUserLambdaVersionqz9BR9yeriyUXXycKS8O4AJdxLVBo6Q1kZuKSvdzAY"
            },
            "Export": {
              "Name": "sls-user-service-dev-UpdateUserLambdaFunctionQualifiedArn"
            }
          },
          "CreateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUserLambdaVersionDAEF0i06wNUQEUscUKVXfCj1YAPKJhsGKyiwlExxQY"
            },
            "Export": {
              "Name": "sls-user-service-dev-CreateUserLambdaFunctionQualifiedArn"
            }
          },
          "GetUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserLambdaVersionGxyiEIV6rS2N3tGvBvVaEQqbgPCyyI7zxSERTwCL2A"
            },
            "Export": {
              "Name": "sls-user-service-dev-GetUserLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-user-service-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "createUser": {
        "handler": "com.pragma.app.createuser.CreateUserHandler",
        "runtime": "java21",
        "package": {
          "artifact": "user-java/target/user-java-1.0-SNAPSHOT.jar"
        },
        "events": [
          {
            "http": {
              "path": "users",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "user-service-dev-createUser",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "CreateUserLambdaVersionDAEF0i06wNUQEUscUKVXfCj1YAPKJhsGKyiwlExxQY"
      },
      "getUser": {
        "handler": "com.pragma.app.getuser.GetUserHandler",
        "runtime": "java21",
        "package": {
          "artifact": "user-java/target/user-java-1.0-SNAPSHOT.jar"
        },
        "events": [
          {
            "http": {
              "path": "users/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "user-service-dev-getUser",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetUserLambdaVersionGxyiEIV6rS2N3tGvBvVaEQqbgPCyyI7zxSERTwCL2A"
      },
      "deleteUser": {
        "handler": "user-node/deleteUserHandler.deleteUserHandler",
        "runtime": "nodejs20.x",
        "package": {
          "include": [
            "user-node/deleteUserHandler.js"
          ],
          "artifact": ".serverless\\deleteUser.zip"
        },
        "events": [
          {
            "http": {
              "path": "users/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "user-service-dev-deleteUser",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "DeleteUserLambdaVersionHuaIv8KbIjQHN6CiTJ7mZpPoEETaLueEJJcUkJcSU"
      },
      "updateUser": {
        "handler": "user-node/updateUserHandler.updateUserHandler",
        "runtime": "nodejs20.x",
        "package": {
          "include": [
            "user-node/updateUserHandler.js"
          ],
          "artifact": ".serverless\\updateUser.zip"
        },
        "events": [
          {
            "http": {
              "path": "users/{id}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "user-service-dev-updateUser",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "UpdateUserLambdaVersionqz9BR9yeriyUXXycKS8O4AJdxLVBo6Q1kZuKSvdzAY"
      },
      "sendMessage": {
        "handler": "user-node/sendMessageHandler.sendMessageHandler",
        "runtime": "nodejs20.x",
        "package": {
          "include": [
            "user-node/sendMessageHandler.js"
          ],
          "artifact": ".serverless\\sendMessage.zip"
        },
        "events": [
          {
            "sqs": {
              "arn": "arn:aws:sqs:us-east-1:648078772415:queue_users"
            }
          }
        ],
        "name": "user-service-dev-sendMessage",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "SendMessageLambdaVersionhGxnWNY9pAUHB5E9cT4OfG1Sag5J6qx2Xow3X5Nk"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "user-service",
      "frameworkVersion": "4",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/user-service/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-3dd6e53d-a686",
        "artifactDirectoryName": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/user-service/dev/1749808991644-2025-06-13T10:03:11.644Z",
    "artifact": ""
  }
}